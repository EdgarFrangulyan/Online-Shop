{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useTween = void 0;\nconst react_1 = require(\"react\");\n/**\n * Provides an interpolated value, beginning at 0 and ending at 1, based on a\n * provided duration and animation timing function.\n */\nconst useTween = (durationMs, easingFunction,\n// navigationNum is an combination of numbers that are stable when the\n// animation should not be running or should continue running, but change when\n// the animation should start running. In practice, this is a combination of\n// the animation distance and slide index.\nnavigationNum, shouldInterrupt) => {\n  const [normalizedTimeRaw, setNormalizedTime] = (0, react_1.useState)(1);\n  const startTime = (0, react_1.useRef)(Date.now());\n  const rAF = (0, react_1.useRef)();\n  const isFirstRender = (0, react_1.useRef)(true);\n  const lastNavigationNum = (0, react_1.useRef)(null);\n  // Detect on the first render following navigation if the animation should\n  // be running. If we wait for the useEffect, the first render will flash with\n  // the slide in its destination position, before the animation triggers,\n  // sending it back to the position of the first frame of the animation. This\n  // approach is done in place of a useLayoutEffect, which has issues with SSR.\n  const normalizedTime = lastNavigationNum.current === null || lastNavigationNum.current === navigationNum || shouldInterrupt ? normalizedTimeRaw : 0; // 0 here indicates the animation has begun\n  (0, react_1.useEffect)(() => {\n    lastNavigationNum.current = navigationNum;\n    // Skip the first render as we don't want to trigger the animation right off\n    // the bat\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    if (shouldInterrupt) {\n      return;\n    }\n    startTime.current = Date.now();\n    setNormalizedTime(0);\n    const tick = () => {\n      rAF.current = requestAnimationFrame(() => {\n        const currentTime = Date.now();\n        const normalizedTime = Math.min(1, (currentTime - startTime.current) / durationMs);\n        setNormalizedTime(normalizedTime);\n        if (normalizedTime < 1) {\n          tick();\n        } else {\n          // Clean up so we can use this value to determine if the most recent\n          // animation completed\n          rAF.current = undefined;\n        }\n      });\n    };\n    tick();\n    return () => {\n      // If the most recent animation did not complete, cut it short and reset\n      // the animation\n      if (rAF.current !== undefined) {\n        cancelAnimationFrame(rAF.current);\n        setNormalizedTime(1);\n      }\n    };\n  }, [navigationNum, durationMs, shouldInterrupt]);\n  return {\n    isAnimating: normalizedTime !== 1,\n    value: easingFunction(normalizedTime)\n  };\n};\nexports.useTween = useTween;","map":{"version":3,"names":["react_1","require","useTween","durationMs","easingFunction","navigationNum","shouldInterrupt","normalizedTimeRaw","setNormalizedTime","useState","startTime","useRef","Date","now","rAF","isFirstRender","lastNavigationNum","normalizedTime","current","useEffect","tick","requestAnimationFrame","currentTime","Math","min","undefined","cancelAnimationFrame","isAnimating","value","exports"],"sources":["../../src/hooks/use-tween.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA,MAAAA,OAAA,GAAAC,OAAA;AAGA;;;;AAIO,MAAMC,QAAQ,GAAGA,CACtBC,UAAkB,EAClBC,cAA8B;AAC9B;AACA;AACA;AACA;AACAC,aAAqB,EACrBC,eAAwB,KACtB;EACF,MAAM,CAACC,iBAAiB,EAAEC,iBAAiB,CAAC,GAAG,IAAAR,OAAA,CAAAS,QAAQ,EAAC,CAAC,CAAC;EAC1D,MAAMC,SAAS,GAAG,IAAAV,OAAA,CAAAW,MAAM,EAACC,IAAI,CAACC,GAAG,EAAE,CAAC;EACpC,MAAMC,GAAG,GAAG,IAAAd,OAAA,CAAAW,MAAM,GAAsB;EACxC,MAAMI,aAAa,GAAG,IAAAf,OAAA,CAAAW,MAAM,EAAC,IAAI,CAAC;EAClC,MAAMK,iBAAiB,GAAG,IAAAhB,OAAA,CAAAW,MAAM,EAAgB,IAAI,CAAC;EAErD;EACA;EACA;EACA;EACA;EACA,MAAMM,cAAc,GAClBD,iBAAiB,CAACE,OAAO,KAAK,IAAI,IAClCF,iBAAiB,CAACE,OAAO,KAAKb,aAAa,IAC3CC,eAAe,GACXC,iBAAiB,GACjB,CAAC,CAAC,CAAC;EAET,IAAAP,OAAA,CAAAmB,SAAS,EAAC,MAAK;IACbH,iBAAiB,CAACE,OAAO,GAAGb,aAAa;IAEzC;IACA;IACA,IAAIU,aAAa,CAACG,OAAO,EAAE;MACzBH,aAAa,CAACG,OAAO,GAAG,KAAK;MAC7B;;IAGF,IAAIZ,eAAe,EAAE;MACnB;;IAGFI,SAAS,CAACQ,OAAO,GAAGN,IAAI,CAACC,GAAG,EAAE;IAC9BL,iBAAiB,CAAC,CAAC,CAAC;IAEpB,MAAMY,IAAI,GAAGA,CAAA,KAAK;MAChBN,GAAG,CAACI,OAAO,GAAGG,qBAAqB,CAAC,MAAK;QACvC,MAAMC,WAAW,GAAGV,IAAI,CAACC,GAAG,EAAE;QAC9B,MAAMI,cAAc,GAAGM,IAAI,CAACC,GAAG,CAC7B,CAAC,EACD,CAACF,WAAW,GAAGZ,SAAS,CAACQ,OAAO,IAAIf,UAAU,CAC/C;QACDK,iBAAiB,CAACS,cAAc,CAAC;QAEjC,IAAIA,cAAc,GAAG,CAAC,EAAE;UACtBG,IAAI,EAAE;SACP,MAAM;UACL;UACA;UACAN,GAAG,CAACI,OAAO,GAAGO,SAAS;;MAE3B,CAAC,CAAC;IACJ,CAAC;IACDL,IAAI,EAAE;IAEN,OAAO,MAAK;MACV;MACA;MACA,IAAIN,GAAG,CAACI,OAAO,KAAKO,SAAS,EAAE;QAC7BC,oBAAoB,CAACZ,GAAG,CAACI,OAAO,CAAC;QACjCV,iBAAiB,CAAC,CAAC,CAAC;;IAExB,CAAC;EACH,CAAC,EAAE,CAACH,aAAa,EAAEF,UAAU,EAAEG,eAAe,CAAC,CAAC;EAEhD,OAAO;IACLqB,WAAW,EAAEV,cAAc,KAAK,CAAC;IACjCW,KAAK,EAAExB,cAAc,CAACa,cAAc;GACrC;AACH,CAAC;AA/EYY,OAAA,CAAA3B,QAAQ,GAAAA,QAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}