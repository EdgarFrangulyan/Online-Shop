{"ast":null,"code":"\n\n// import React, { useCallback, useEffect, useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux'\n// import { getProducts } from '../store/actions/products';\n// import AddShoppingCartIcon from '@mui/icons-material/AddShoppingCart';\n// import FavoriteIcon from '@mui/icons-material/FavoriteBorder';\n// import FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\n// import 'react-toastify/dist/ReactToastify.css';\n// import Spinner from 'react-bootstrap/Spinner';\n// import { basketCreate, basketList } from '../store/actions/basket';\n// import { Link, useNavigate } from 'react-router-dom';\n// import { likeList, likeProduct } from '../store/actions/likeProducts';\n// import { toast } from 'react-toastify';\n// import ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\n// import _ from 'lodash';\n// import Toast from './Toast';\n\n// export default function Wrapper() {\n\n//     const dispatch = useDispatch();\n//     const products = useSelector((state) => state.products.productsData);\n//     const navigate = useNavigate();\n//     const [loading, setLoading] = useState(true);\n//     const [show, setShow] = useState(false)\n//     const userData = JSON.parse(localStorage.getItem(\"userData\"));\n//     const basket = useSelector((state) => state.basket.basket)\n//     const likes = useSelector((state) => state.likes.likes)\n\n//     console.log(basket)\n//     console.log(likes)\n\n//     useEffect(() => {\n\n//         (async () => {\n//             setLoading(true)\n//             await dispatch(getProducts())\n//             setLoading(false)\n//         })()\n\n//     }, [getProducts]);\n\n//     useEffect(() => {\n//         window.addEventListener('scroll', () => {\n//             (window.pageYOffset > 300)\n//                 ? setShow(true)\n//                 : setShow(false)\n//         });\n//     }, []);\n\n//     const goToTop = () => {\n//         window.scrollTo({\n//             top: 0,\n//             behavior: \"smooth\",\n//         });\n//     };\n\n//     const handleClick = useCallback(async (el) => {\n\n//         let error = false\n//         const prodId = basket.map((id) => (id.product_id))\n\n//         if (prodId.find((id) => id === el.id)) {\n//             error = true\n//             toast.error('Item already in cart!', {\n//                 position: \"top-center\",\n//                 autoClose: 1000,\n//                 hideProgressBar: false,\n//                 closeOnClick: true,\n//                 pauseOnHover: true,\n//                 draggable: true,\n//                 progress: undefined,\n//                 theme: \"dark\",\n//             });\n//         }\n\n//         if (!userData) {\n//             toast.error('Please login to be add card!', {\n//                 position: \"top-center\",\n//                 autoClose: 1000,\n//                 hideProgressBar: false,\n//                 closeOnClick: true,\n//                 pauseOnHover: true,\n//                 draggable: true,\n//                 progress: undefined,\n//                 theme: \"dark\",\n//             });\n//             return\n//         }\n\n//         else if (error && userData) {\n//             return\n//         }\n\n//         const data = await dispatch(basketCreate({\n//             user_id: userData.id,\n//             product_id: el.id,\n//             quantity: el.quantity,\n//             price: el.price\n//         }))\n\n//         if (data.payload) {\n//             toast.success(`${el.title} added in your basket`, {\n//                 position: \"top-center\",\n//                 autoClose: 1000,\n//                 hideProgressBar: false,\n//                 closeOnClick: true,\n//                 pauseOnHover: true,\n//                 draggable: true,\n//                 progress: undefined,\n//                 theme: \"dark\",\n//             });\n//         }\n\n//         await dispatch(basketList())\n//     }, [userData])\n\n//     const handleLike = useCallback(async (el) => {\n\n//         let error = false\n//         const likeId = likes.map((id) => (id.product_id))\n\n//         if (likeId.find((id) => id === el.id)) {\n//             error = true\n//             toast.error('Item already in your wishlist!', {\n//                 position: \"top-center\",\n//                 autoClose: 1000,\n//                 hideProgressBar: false,\n//                 closeOnClick: true,\n//                 pauseOnHover: true,\n//                 draggable: true,\n//                 progress: undefined,\n//                 theme: \"dark\",\n//             });\n//         }\n\n//         if (!userData) {\n//             toast.error('Please login to be add item in your wishlist!', {\n//                 position: \"top-center\",\n//                 autoClose: 1000,\n//                 hideProgressBar: false,\n//                 closeOnClick: true,\n//                 pauseOnHover: true,\n//                 draggable: true,\n//                 progress: undefined,\n//                 theme: \"dark\",\n//             });\n//             return\n//         }\n\n//         else if (error) {\n//             return\n//         }\n\n//         const data = await dispatch(likeProduct({\n\n//             product_id: el.id,\n//             user_id: userData.id\n//         }))\n//         if (data.payload) {\n//             toast(`${el.title} added in your wishlist`)\n//         }\n\n//         console.log(data)\n//         await dispatch(likeList())\n\n//     }, [userData])\n\n//     const singleItem = useCallback((item) => {\n//         navigate(`/home/${item.id}`)\n\n//     }, [])\n\n//     return (\n//         <>\n\n//             <Toast />\n//             <div className='main'>\n//                 <div className='container'>\n//                     {!loading ?\n//                     /*\n//                         <div className='cardStyle'>\n//                             {products.map((item) => (\n//                                 <div key={item.id} className='cardItem'>\n//                                     <div onClick={() => singleItem(item)} className=\"card \">\n//                                         <img className=\"card-img-top\" src={item.image} alt=\"Card image cap\" />\n//                                         <div className=\"card-body\">\n//                                             <h5 className=\"card-title\">{item.title}</h5>\n//                                             <p className=\"card-text desc\">{item.description}</p>\n//                                             <p className=\"card-text\">{item.price + '$'}</p>\n//                                         </div>\n//                                     </div>\n//                                     <div className='btnChange'>\n//                                         <button onClick={() => handleClick(item)}><AddShoppingCartIcon style={{ fontSize: 35 }} /></button>\n//                                         <button onClick={() => handleLike(item)}><FavoriteIcon style={{ fontSize: 35 }} /></button>\n//                                     </div>\n//                                 </div>\n//                             ))}\n\n//                         </div>\n//                         */\n\n// <div className='cardStyle'>\n//     {products.map((item) => (\n//         <div key={item.id} className='cardItem'>\n//                         <div onClick={() => singleItem(item)}  className=\"card \">\n//                             <figure>\n//                                 <img src={item.image} className='card-image' alt=\"img\"/>\n//                                 <button className='likeButton'>\n//                                     <FavoriteBorderIcon style={{fontSize: 35}}/>\n//                                 </button>\n//                                 <figcaption className='cardBody'>\n//                                     <p className=\"price\">{item.price}$</p>\n//                                     <h5 className=\"title\">{item.title}</h5>\n//                                     <p className=\"desc\">\n//                                         {item.description}\n//                                     </p>\n\n//                                     <button className='addToCartButton'>\n//                                         <AddShoppingCartIcon style={{fontSize: 35, verticalAlign:'middle'}}/> Add to cart\n//                                     </button>\n//                                 </figcaption>\n//                             </figure>\n//                         </div>\n//                     </div>\n\n//     ))}\n\n// </div>\n//                         :\n//                         <div className='spL'>\n//                             <Spinner className='spinnerLoad' animation=\"border\" variant=\"dark\" />\n\n//                         </div>\n\n//                     }\n//                     <div>\n//                         {show && (\n//                             <div className='top' onClick={goToTop}>\n//                                 <ArrowUpwardIcon style={{ fontSize: 30, fill: 'white' }} />\n//                             </div>\n//                         )}\n//                     </div>\n//                 </div>\n//             </div>\n//         </>\n//     )\n// }","map":{"version":3,"names":[],"sources":["/Users/edgarfrangulyan/Desktop/Shop2/frontshopp/src/components/Wrapper.js"],"sourcesContent":["\n\n// import React, { useCallback, useEffect, useState } from 'react';\n// import { useDispatch, useSelector } from 'react-redux'\n// import { getProducts } from '../store/actions/products';\n// import AddShoppingCartIcon from '@mui/icons-material/AddShoppingCart';\n// import FavoriteIcon from '@mui/icons-material/FavoriteBorder';\n// import FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\n// import 'react-toastify/dist/ReactToastify.css';\n// import Spinner from 'react-bootstrap/Spinner';\n// import { basketCreate, basketList } from '../store/actions/basket';\n// import { Link, useNavigate } from 'react-router-dom';\n// import { likeList, likeProduct } from '../store/actions/likeProducts';\n// import { toast } from 'react-toastify';\n// import ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\n// import _ from 'lodash';\n// import Toast from './Toast';\n\n\n\n\n// export default function Wrapper() {\n\n//     const dispatch = useDispatch();\n//     const products = useSelector((state) => state.products.productsData);\n//     const navigate = useNavigate();\n//     const [loading, setLoading] = useState(true);\n//     const [show, setShow] = useState(false)\n//     const userData = JSON.parse(localStorage.getItem(\"userData\"));\n//     const basket = useSelector((state) => state.basket.basket)\n//     const likes = useSelector((state) => state.likes.likes)\n\n\n//     console.log(basket)\n//     console.log(likes)\n\n//     useEffect(() => {\n\n//         (async () => {\n//             setLoading(true)\n//             await dispatch(getProducts())\n//             setLoading(false)\n//         })()\n\n//     }, [getProducts]);\n\n//     useEffect(() => {\n//         window.addEventListener('scroll', () => {\n//             (window.pageYOffset > 300)\n//                 ? setShow(true)\n//                 : setShow(false)\n//         });\n//     }, []);\n\n//     const goToTop = () => {\n//         window.scrollTo({\n//             top: 0,\n//             behavior: \"smooth\",\n//         });\n//     };\n\n//     const handleClick = useCallback(async (el) => {\n\n//         let error = false\n//         const prodId = basket.map((id) => (id.product_id))\n\n\n//         if (prodId.find((id) => id === el.id)) {\n//             error = true\n//             toast.error('Item already in cart!', {\n//                 position: \"top-center\",\n//                 autoClose: 1000,\n//                 hideProgressBar: false,\n//                 closeOnClick: true,\n//                 pauseOnHover: true,\n//                 draggable: true,\n//                 progress: undefined,\n//                 theme: \"dark\",\n//             });\n//         }\n\n\n//         if (!userData) {\n//             toast.error('Please login to be add card!', {\n//                 position: \"top-center\",\n//                 autoClose: 1000,\n//                 hideProgressBar: false,\n//                 closeOnClick: true,\n//                 pauseOnHover: true,\n//                 draggable: true,\n//                 progress: undefined,\n//                 theme: \"dark\",\n//             });\n//             return\n//         }\n\n//         else if (error && userData) {\n//             return\n//         }\n\n      \n\n//         const data = await dispatch(basketCreate({\n//             user_id: userData.id,\n//             product_id: el.id,\n//             quantity: el.quantity,\n//             price: el.price\n//         }))\n\n\n\n//         if (data.payload) {\n//             toast.success(`${el.title} added in your basket`, {\n//                 position: \"top-center\",\n//                 autoClose: 1000,\n//                 hideProgressBar: false,\n//                 closeOnClick: true,\n//                 pauseOnHover: true,\n//                 draggable: true,\n//                 progress: undefined,\n//                 theme: \"dark\",\n//             });\n//         }\n\n//         await dispatch(basketList())\n//     }, [userData])\n\n\n//     const handleLike = useCallback(async (el) => {\n\n\n\n\n//         let error = false\n//         const likeId = likes.map((id) => (id.product_id))\n\n//         if (likeId.find((id) => id === el.id)) {\n//             error = true\n//             toast.error('Item already in your wishlist!', {\n//                 position: \"top-center\",\n//                 autoClose: 1000,\n//                 hideProgressBar: false,\n//                 closeOnClick: true,\n//                 pauseOnHover: true,\n//                 draggable: true,\n//                 progress: undefined,\n//                 theme: \"dark\",\n//             });\n//         }\n\n//         if (!userData) {\n//             toast.error('Please login to be add item in your wishlist!', {\n//                 position: \"top-center\",\n//                 autoClose: 1000,\n//                 hideProgressBar: false,\n//                 closeOnClick: true,\n//                 pauseOnHover: true,\n//                 draggable: true,\n//                 progress: undefined,\n//                 theme: \"dark\",\n//             });\n//             return\n//         }\n\n//         else if (error) {\n//             return\n//         }\n\n\n//         const data = await dispatch(likeProduct({\n\n//             product_id: el.id,\n//             user_id: userData.id\n//         }))\n//         if (data.payload) {\n//             toast(`${el.title} added in your wishlist`)\n//         }\n\n\n\n\n//         console.log(data)\n//         await dispatch(likeList())\n\n//     }, [userData])\n\n\n//     const singleItem = useCallback((item) => {\n//         navigate(`/home/${item.id}`)\n\n//     }, [])\n\n//     return (\n//         <>\n\n//             <Toast />\n//             <div className='main'>\n//                 <div className='container'>\n//                     {!loading ?\n//                     /*\n//                         <div className='cardStyle'>\n//                             {products.map((item) => (\n//                                 <div key={item.id} className='cardItem'>\n//                                     <div onClick={() => singleItem(item)} className=\"card \">\n//                                         <img className=\"card-img-top\" src={item.image} alt=\"Card image cap\" />\n//                                         <div className=\"card-body\">\n//                                             <h5 className=\"card-title\">{item.title}</h5>\n//                                             <p className=\"card-text desc\">{item.description}</p>\n//                                             <p className=\"card-text\">{item.price + '$'}</p>\n//                                         </div>\n//                                     </div>\n//                                     <div className='btnChange'>\n//                                         <button onClick={() => handleClick(item)}><AddShoppingCartIcon style={{ fontSize: 35 }} /></button>\n//                                         <button onClick={() => handleLike(item)}><FavoriteIcon style={{ fontSize: 35 }} /></button>\n//                                     </div>\n//                                 </div>\n//                             ))}\n\n//                         </div>\n//                         */\n\n// <div className='cardStyle'>\n//     {products.map((item) => (\n//         <div key={item.id} className='cardItem'>\n//                         <div onClick={() => singleItem(item)}  className=\"card \">\n//                             <figure>\n//                                 <img src={item.image} className='card-image' alt=\"img\"/>\n//                                 <button className='likeButton'>\n//                                     <FavoriteBorderIcon style={{fontSize: 35}}/>\n//                                 </button>\n//                                 <figcaption className='cardBody'>\n//                                     <p className=\"price\">{item.price}$</p>\n//                                     <h5 className=\"title\">{item.title}</h5>\n//                                     <p className=\"desc\">\n//                                         {item.description}\n//                                     </p>\n\n//                                     <button className='addToCartButton'>\n//                                         <AddShoppingCartIcon style={{fontSize: 35, verticalAlign:'middle'}}/> Add to cart\n//                                     </button>\n//                                 </figcaption>\n//                             </figure>\n//                         </div>\n//                     </div>\n\n\n\n//     ))}\n   \n\n\n// </div>\n//                         :\n//                         <div className='spL'>\n//                             <Spinner className='spinnerLoad' animation=\"border\" variant=\"dark\" />\n\n//                         </div>\n\n//                     }\n//                     <div>\n//                         {show && (\n//                             <div className='top' onClick={goToTop}>\n//                                 <ArrowUpwardIcon style={{ fontSize: 30, fill: 'white' }} />\n//                             </div>\n//                         )}\n//                     </div>\n//                 </div>\n//             </div>\n//         </>\n//     )\n// }\n"],"mappings":";;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAGA;;AAKA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;;AAEA;;AAGA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAIA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}