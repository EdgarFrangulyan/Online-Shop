{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useStateWithRef = void 0;\nconst react_1 = require(\"react\");\n/**\n * Like useState, but also returns a ref that's always instantly updated.\n *\n * This is useful in two cases:\n *\n * 1. You need to both force a re-render when a variable changes, and\n *    also avoid re-running side effects (for example, a network call), even\n *    before the state fully updates for the component.\n * 2. Multiple callbacks need to modify the same object or array before the\n *    state updates. For example, if one callback tries to append 4 to\n *    `[1, 2, 3]` and another tries to append 5, we may end up with only\n *    `[1, 2, 3, 5]` instead of `[1, 2, 3, 4, 5]`\n */\nconst useStateWithRef = initialState => {\n  const [value, setValue] = (0, react_1.useState)(initialState);\n  // Need to explicitly type this out, or the overloads can confuse the\n  // compiler to think that this might be a React Component ref\n  const valueRef = (0, react_1.useRef)(initialState);\n  const setValueAndRef = (0, react_1.useCallback)(newValue => {\n    valueRef.current = newValue;\n    setValue(newValue);\n  }, []);\n  return [value, setValueAndRef, valueRef];\n};\nexports.useStateWithRef = useStateWithRef;","map":{"version":3,"names":["react_1","require","useStateWithRef","initialState","value","setValue","useState","valueRef","useRef","setValueAndRef","useCallback","newValue","current","exports"],"sources":["../../src/hooks/use-state-with-ref.ts"],"sourcesContent":[null],"mappings":";;;;;;AAAA,MAAAA,OAAA,GAAAC,OAAA;AAEA;;;;;;;;;;;;;AAaO,MAAMC,eAAe,GAC1BC,YAAe,IACoC;EACnD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAG,IAAAL,OAAA,CAAAM,QAAQ,EAACH,YAAY,CAAC;EAChD;EACA;EACA,MAAMI,QAAQ,GAAG,IAAAP,OAAA,CAAAQ,MAAM,EAAIL,YAAY,CAAwB;EAE/D,MAAMM,cAAc,GAAG,IAAAT,OAAA,CAAAU,WAAW,EAAEC,QAAW,IAAI;IACjDJ,QAAQ,CAACK,OAAO,GAAGD,QAAQ;IAC3BN,QAAQ,CAACM,QAAQ,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,CAACP,KAAK,EAAEK,cAAc,EAAEF,QAAQ,CAAC;AAC1C,CAAC;AAdYM,OAAA,CAAAX,eAAe,GAAAA,eAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}