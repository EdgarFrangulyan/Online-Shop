{"ast":null,"code":"import { createReducer } from \"@reduxjs/toolkit\";\nimport { payToken, payConfirm } from \"../actions/payment\";\nconst initialState = {\n  payData: []\n};\nexport default createReducer(initialState, {\n  [payConfirm.pending]: (state, action) => {},\n  [payConfirm.pending]: (state, action) => {\n    console.log(action);\n  },\n  [payConfirm.pending]: (state, action) => {}\n});\n\n/*\n<div onClick={(e) => e.stopPropagation()}>\n<button onClick={() => handleDelete(product.id)}>\n  Delete Product <RemoveShoppingCartIcon style={{ fontSize: 30 }} />\n</button>\n<button onClick={() => handleEdit(product, setShow(!show))}>\n  Edit Product <EditIcon style={{ fontSize: 30 }} />\n</button>\n {show ? \n <Modal ariaHideApp={false} isOpen={mod}>\n  <form onSubmit={(ev) => handleSubmit(ev)}>\n<input value={title} onChange={(ev) => setTitle(ev.target.value)} type = 'text' placeholder='Title'/>\n<input value={desc} onChange={(ev) => setDesc(ev.target.value)} type = 'text' placeholder='Description'/>\n<input value={short} onChange={(ev) => setShort(ev.target.value)} type = 'text' placeholder='Short Description'/>\n<input value={qnt} onChange={(ev) => setQnt(ev.target.value)} type = 'number' placeholder='Quantity'/>\n<input value={price} onChange={(ev) => setPrice(ev.target.value)} type = 'number' placeholder='Price'/>\n<button type = 'submit'>Add</button>\n<button onClick={() => setShow(!show)}>Close Modal</button>\n</form>\n </Modal>\n:\nnull\n}\n<div>\n</div>\n</div>\n*/","map":{"version":3,"names":["createReducer","payToken","payConfirm","initialState","payData","pending","state","action","console","log"],"sources":["/Users/edgarfrangulyan/Desktop/Shop2/frontshopp/src/store/reducers/payment.js"],"sourcesContent":["import { createReducer } from \"@reduxjs/toolkit\";\nimport { payToken, payConfirm } from \"../actions/payment\";\n\n\nconst initialState = {\npayData: []    \n}\n\n\n\nexport default createReducer(initialState, {\n[payConfirm.pending]: (state, action) => {\n\n},\n[payConfirm.pending]: (state, action) => {\nconsole.log(action)\n},\n[payConfirm.pending]: (state, action) => {\n\n},\n})\n\n\n\n\n\n\n\n/*\n<div onClick={(e) => e.stopPropagation()}>\n<button onClick={() => handleDelete(product.id)}>\n  Delete Product <RemoveShoppingCartIcon style={{ fontSize: 30 }} />\n</button>\n<button onClick={() => handleEdit(product, setShow(!show))}>\n  Edit Product <EditIcon style={{ fontSize: 30 }} />\n</button>\n {show ? \n <Modal ariaHideApp={false} isOpen={mod}>\n  <form onSubmit={(ev) => handleSubmit(ev)}>\n<input value={title} onChange={(ev) => setTitle(ev.target.value)} type = 'text' placeholder='Title'/>\n<input value={desc} onChange={(ev) => setDesc(ev.target.value)} type = 'text' placeholder='Description'/>\n<input value={short} onChange={(ev) => setShort(ev.target.value)} type = 'text' placeholder='Short Description'/>\n<input value={qnt} onChange={(ev) => setQnt(ev.target.value)} type = 'number' placeholder='Quantity'/>\n<input value={price} onChange={(ev) => setPrice(ev.target.value)} type = 'number' placeholder='Price'/>\n<button type = 'submit'>Add</button>\n<button onClick={() => setShow(!show)}>Close Modal</button>\n</form>\n </Modal>\n:\nnull\n}\n<div>\n</div>\n</div>\n*/"],"mappings":"AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,SAASC,QAAQ,EAAEC,UAAU,QAAQ,oBAAoB;AAGzD,MAAMC,YAAY,GAAG;EACrBC,OAAO,EAAE;AACT,CAAC;AAID,eAAeJ,aAAa,CAACG,YAAY,EAAE;EAC3C,CAACD,UAAU,CAACG,OAAO,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK,CAEzC,CAAC;EACD,CAACL,UAAU,CAACG,OAAO,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;IACzCC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB,CAAC;EACD,CAACL,UAAU,CAACG,OAAO,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK,CAEzC;AACA,CAAC,CAAC;;AAQF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}