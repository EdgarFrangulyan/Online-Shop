{"ast":null,"code":"\"use strict\";\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SliderList = exports.getPercentOffsetForSlide = void 0;\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\nconst react_1 = __importStar(require(\"react\"));\nconst default_controls_1 = require(\"./default-controls\");\nconst use_tween_1 = require(\"./hooks/use-tween\");\nconst getPercentOffsetForSlide = (currentSlide, slideCount, slidesToShow, cellAlign, wrapAround) => {\n  // When wrapAround is enabled, we show the slides 3 times\n  const renderedSlideCount = wrapAround ? 3 * slideCount : slideCount;\n  const singleSlidePercentOfWhole = 100 / renderedSlideCount;\n  // When wrap is on, -33.33% puts us right on the center, true set of slides\n  // (the left and right sets are clones meant to avoid visual gaps)\n  let slide0Offset = wrapAround ? -100 / 3 : 0;\n  if (cellAlign === 'right' && slidesToShow > 1) {\n    const excessSlides = slidesToShow - 1;\n    slide0Offset += singleSlidePercentOfWhole * excessSlides;\n  }\n  if (cellAlign === 'center' && slidesToShow > 1) {\n    const excessSlides = slidesToShow - 1;\n    // Half of excess is on left and half is on right when centered\n    const excessLeftSlides = excessSlides / 2;\n    slide0Offset += singleSlidePercentOfWhole * excessLeftSlides;\n  }\n  const currentSlideOffsetFrom0 = 100 / renderedSlideCount * currentSlide;\n  return slide0Offset - currentSlideOffsetFrom0;\n};\nexports.getPercentOffsetForSlide = getPercentOffsetForSlide;\nexports.SliderList = react_1.default.forwardRef((_ref, forwardedRef) => {\n  let {\n    animation,\n    animationDistance,\n    cellAlign,\n    children,\n    currentSlide,\n    disableAnimation,\n    disableEdgeSwiping,\n    draggedOffset,\n    easing,\n    edgeEasing,\n    isDragging,\n    scrollMode,\n    slideCount,\n    slidesToScroll,\n    slidesToShow,\n    speed,\n    wrapAround,\n    slideWidth,\n    setIsAnimating\n  } = _ref;\n  // When wrapAround is enabled, we show the slides 3 times\n  const renderedSlideCount = wrapAround ? 3 * slideCount : slideCount;\n  const listVisibleWidth = slideWidth ? `calc(${slideWidth} * ${renderedSlideCount})` : `${renderedSlideCount * 100 / slidesToShow}%`;\n  const percentOffsetForSlideProps = [slideCount, slidesToShow, cellAlign, wrapAround];\n  // We recycle dot index generation to determine the leftmost and rightmost\n  // indices used, to be used in calculating the x-translation values we need\n  // to limit to or when edgeEasing should be used.\n  const dotIndexes = (0, default_controls_1.getDotIndexes)(slideCount, slidesToScroll, scrollMode, slidesToShow, wrapAround, cellAlign);\n  let clampedDraggedOffset = `${draggedOffset}px`;\n  if (isDragging && disableEdgeSwiping && !wrapAround) {\n    const clampOffsets = [dotIndexes[0], dotIndexes[dotIndexes.length - 1]].map(index => (0, exports.getPercentOffsetForSlide)(index, ...percentOffsetForSlideProps));\n    // Offsets are seemingly backwards because the rightmost slide creates\n    // the most negative translate value\n    clampedDraggedOffset = `clamp(${clampOffsets[1]}%, ${draggedOffset}px, ${clampOffsets[0]}%)`;\n  }\n  const slideBasedOffset = (0, exports.getPercentOffsetForSlide)(currentSlide, ...percentOffsetForSlideProps);\n  const isEdgeEasing = !disableEdgeSwiping && !wrapAround && (currentSlide === dotIndexes[0] && animationDistance < 0 || currentSlide === dotIndexes[dotIndexes.length - 1] && animationDistance > 0);\n  const {\n    value: transition,\n    isAnimating\n  } = (0, use_tween_1.useTween)(speed, !isEdgeEasing ? easing : edgeEasing,\n  // animationDistance is assumed to be unique enough that it can be used to\n  // detect when a new animation should start. This is used in addition to\n  // currentSlide because some animations, such as those with edgeEasing, do\n  // not occur due to a change in value of currentSlide\n  currentSlide + animationDistance, isDragging || disableAnimation || animation === 'fade');\n  // Return undefined if the transform would be 0 pixels since transforms can\n  // cause flickering in chrome.\n  let positioning;\n  if (isDragging || slideBasedOffset !== 0 || isAnimating) {\n    if (isDragging) {\n      positioning = `translateX(${clampedDraggedOffset})`;\n    } else {\n      const transitionOffset = isAnimating ? (1 - transition) * animationDistance : 0;\n      positioning = `translateX(calc(${slideBasedOffset}% - ${transitionOffset}px))`;\n    }\n  }\n  (0, react_1.useEffect)(() => {\n    setIsAnimating(isAnimating);\n  }, [isAnimating, setIsAnimating]);\n  return (0, jsx_runtime_1.jsx)(\"div\", Object.assign({\n    ref: forwardedRef,\n    className: \"slider-list\",\n    style: {\n      width: listVisibleWidth,\n      textAlign: 'left',\n      userSelect: 'auto',\n      transform: positioning,\n      display: 'flex'\n    }\n  }, {\n    children: children\n  }));\n});\nexports.SliderList.displayName = 'SliderList';","map":{"version":3,"names":["react_1","__importStar","require","default_controls_1","use_tween_1","getPercentOffsetForSlide","currentSlide","slideCount","slidesToShow","cellAlign","wrapAround","renderedSlideCount","singleSlidePercentOfWhole","slide0Offset","excessSlides","excessLeftSlides","currentSlideOffsetFrom0","exports","SliderList","default","forwardRef","_ref","forwardedRef","animation","animationDistance","children","disableAnimation","disableEdgeSwiping","draggedOffset","easing","edgeEasing","isDragging","scrollMode","slidesToScroll","speed","slideWidth","setIsAnimating","listVisibleWidth","percentOffsetForSlideProps","dotIndexes","getDotIndexes","clampedDraggedOffset","clampOffsets","length","map","index","slideBasedOffset","isEdgeEasing","value","transition","isAnimating","useTween","positioning","transitionOffset","useEffect","jsx_runtime_1","jsx","Object","assign","ref","className","style","width","textAlign","userSelect","transform","display","displayName"],"sources":["../src/slider-list.tsx"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}